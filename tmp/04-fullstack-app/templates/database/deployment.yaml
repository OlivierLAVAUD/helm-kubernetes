{{- if .Values.database.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgres
  labels:
    {{- include "fullstack-app.labels" . | nindent 4 }}
    component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "fullstack-app.selectorLabels" . | nindent 6 }}
      component: database
  template:
    metadata:
      labels:
        {{- include "fullstack-app.selectorLabels" . | nindent 8 }}
        component: database
    spec:
      containers:
      - name: postgres
        image: "{{ .Values.database.image.repository }}:{{ .Values.database.image.tag }}"
        imagePullPolicy: {{ .Values.database.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.database.service.port }}
          name: postgres
        env:
        - name: POSTGRES_DB
          value: {{ .Values.database.postgresql.database }}
        - name: POSTGRES_USER
          value: {{ .Values.database.postgresql.username }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.database.postgresql.password }}
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        command: ["sh", "-c", "sleep 3600"]
        resources:
          {{- toYaml .Values.database.resources | nindent 10 }}
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-data
        emptyDir: {}
{{- end }}